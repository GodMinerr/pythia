#
# GitHub actions for building and testing.
#
# Don't use `-latest` for targeted VMs, pin specific OS versions instead.
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
#
# When setting up for a tmate debug session, you might need to increase the
# timeout-minutes for each build, else you get kicked out after the timeout.

name: GitHub-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TMATE_DEBUG: 'no'

jobs:


  windows-2019:
    # The type of runner that the job will run on
    runs-on: windows-2019
    timeout-minutes: 30
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Make sure there are no concurrent jobs
    - uses: chevah/auto-cancel-redundant-job@v1
    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    # Skip CI for commits with a message containing the skip-ci string.
    - name: Fail on skip-ci
      if: ${{ github.event.after }}
      run: git log -1 --pretty=format:"%s" ${{ toJSON(github.event.after) }} | grep -v 'skip-ci'

    # Explicitly run our scripts with Bash, not PowerShell (GitHub's default).
    - name: Detect current OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./pythia build

    - name: Test Python
      run: bash ./pythia test

    - name: Test Compat
      run: bash ./pythia compat


  windows-2016:
    runs-on: windows-2016
    timeout-minutes: 30
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Fail on skip-ci
      if: ${{ github.event.after }}
      run: git log -1 --pretty=format:"%s" ${{ toJSON(github.event.after) }} | grep -v 'skip-ci'

    # Explicitly run our scripts with Bash, not PowerShell (GitHub's default).
    - name: Detect current OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./pythia build

    - name: Test Python
      run: bash ./pythia test

    - name: Test Compat
      run: bash ./pythia compat


  ubuntu-20-04:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Install required packages
      run: sudo apt-get install libncurses5-dev

    - name: Detect current OS
      run: ./brink.sh detect_os

    - name: Build Python
      run: ./pythia build

    - name: Test Python
      run: ./pythia test

    - name: Test Compat
      run: ./pythia compat

    # If one of the above steps fails, fire up tmate for remote debugging.
    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  ubuntu-18-04:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Fail on skip-ci
      if: ${{ github.event.after }}
      run: git log -1 --pretty=format:"%s" ${{ toJSON(github.event.after) }} | grep -v 'skip-ci'

    - name: Install required packages
      run: sudo apt-get install libncurses5-dev

    - name: Detect current OS
      run: ./brink.sh detect_os

    - name: Build Python
      run: ./pythia build

    - name: Test Python
      run: ./pythia test

    - name: Test Compat
      run: ./pythia compat

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  ubuntu-16-04:
    runs-on: ubuntu-16.04
    timeout-minutes: 30
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Fail on skip-ci
      if: ${{ github.event.after }}
      run: git log -1 --pretty=format:"%s" ${{ toJSON(github.event.after) }} | grep -v 'skip-ci'

    - name: Install required packages
      run: sudo apt-get install libncurses5-dev

    - name: Detect current OS
      run: ./brink.sh detect_os

    - name: Build Python
      run: ./pythia build

    - name: Test Python
      run: ./pythia test

    - name: Test Compat
      run: ./pythia compat

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  macos-10-15:
    runs-on: macos-10.15
    timeout-minutes: 60
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Fail on skip-ci
      if: ${{ github.event.after }}
      run: git log -1 --pretty=format:"%s" ${{ toJSON(github.event.after) }} | grep -v 'skip-ci'

    - name: Detect current OS
      run: ./brink.sh detect_os

    # Some Homebrew libs pollute the build.
    - name: Hack Homebrew
      run: |
        sudo chmod a-r /usr/local/opt/libffi/lib/libffi.7.dylib
        sudo chmod a-r /usr/local/opt/gettext/lib/libintl.8.dylib

    - name: Build Python
      run: ./pythia build

    - name: Test Python
      run: ./pythia test

    - name: Test Compat
      run: ./pythia compat

    # Fix back Homebrew, to make everything functional for tmate debugging.
    - name: Unhack Homebrew
      if: failure() && env.TMATE_DEBUG == 'yes'
      run: |
        sudo chmod a+r /usr/local/opt/libffi/lib/libffi.7.dylib
        sudo chmod a+r /usr/local/opt/gettext/lib/libintl.8.dylib

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2
